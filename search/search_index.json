{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Reporthub MkDocs Repositories Front End https://github.com/iMMAP/ngm-reportHub . Back End https://github.com/iMMAP/ngm-reportEngine .","title":"Home"},{"location":"#welcome-to-reporthub-mkdocs","text":"","title":"Welcome to Reporthub MkDocs"},{"location":"#repositories","text":"Front End https://github.com/iMMAP/ngm-reportHub . Back End https://github.com/iMMAP/ngm-reportEngine .","title":"Repositories"},{"location":"about/","text":"Purpose Documentation for Developer about ReportHub","title":"About"},{"location":"about/#purpose","text":"Documentation for Developer about ReportHub","title":"Purpose"},{"location":"filter/","text":"Custom Filter in Reporthub 1. Slice purpose : to copy of a portion of an array/string into a new array/string object selected from start to end snippet : | slice:start:end Example : <div align=\"left\" style=\"padding: 20px;\" ng-if=\"panel.minimize.open\"> <a style=\"margin:5px;\" ng-repeat=\"form in panel.forms\" href=\"{{ form.form_url }}\" target=\"_blank\" title=\"Go To {{ form.form_title }}\" class=\"waves-effect waves-light btn\"> <i class=\"material-icons left\">assignment_ind</i> <!-- You can use it like this --> FORM: {{ form.form_title | slice:18:100 }} </a> </div> 2. Split purpose : to divide string based on input character and index put by user snippet: | split:'char ':index Example : <td data-title=\"'Block'\" sortable=\"'admin4name'\"> <div ng-if=\"row.admin4name\"> Block {{ row.admin4name | split:'Block ':1 }} </div> </td> 3. Reverse purpose : to reverse an array snippet : | reverse Example : <div ng-repeat=\"location in project.definition.target_locations | orderBy:'createdAt' | reverse track by $index\" ng-class=\"{'add-padding': !detailLocation[$index]}\"> </div> 4. SumByKey purpose : to sum object by key snippet : data|sumByKey:'key' Example : <td><b>{{ modal.data|sumByKey:'u5male' }}</b></td> 5. SumByKeys purpose : to sum object by more than one key snippet : data|sumByKey:['key','key'] Example : <td><b>{{ modal.data|sumByKey:['u5male','u6female'] }}</b></td> 6. SumArrrayByKeys purpose : to sum array of objects by keys snippet: object | sumArrayByKeys:'key1':{ 'keys': 0,'keys': 0 }:skip Example : <div class=\"beneficiary-count right\"> <span style=\"font-size:1.2rem;\"> <i class=\"material-icons\" style=\"padding-right:10px;\">group</i></span> <!-- filter in app/services/ngmHelper.js --> <!-- You can use it like this --> {{ location | sumArrayByKeys:'beneficiaries':{ 'total_beneficiaries': 0 }:project.lists.skip | number }} </div> 7. SumArrayofArraysByKeys purpose : sum of array of object by keys with max target 2 object snippet : object | sumArrayByKeys:'key1': 'key2':{ 'keys': 0,'keys': 0 }:skip Example : <div class=\"beneficiary-count right\"> <span style=\"font-size:1.2rem;\"> <i class=\"material-icons\" style=\"padding-right:10px;\">group</i></span> <!-- filter in app/services/ngmHelper.js --> <!-- You can use it like this --> {{ location | sumArrayByKeys:'beneficiaries':'details':{ 'total_beneficiaries': 0 }:project.lists.skip | number }} </div> 8. FilterByArray purpose : Example : 9. FilterBeneficiary purpose : Example : <div ng-repeat=\"beneficiary in project.definition.target_beneficiaries | orderBy:'createdAt' | filterBeneficiary:project.filter\" ng-class=\"{'add-padding': !detailBeneficiaries[$index]}\"> </div>","title":"Filter"},{"location":"filter/#custom-filter-in-reporthub","text":"","title":"Custom Filter in Reporthub"},{"location":"filter/#1-slice","text":"purpose : to copy of a portion of an array/string into a new array/string object selected from start to end snippet : | slice:start:end Example : <div align=\"left\" style=\"padding: 20px;\" ng-if=\"panel.minimize.open\"> <a style=\"margin:5px;\" ng-repeat=\"form in panel.forms\" href=\"{{ form.form_url }}\" target=\"_blank\" title=\"Go To {{ form.form_title }}\" class=\"waves-effect waves-light btn\"> <i class=\"material-icons left\">assignment_ind</i> <!-- You can use it like this --> FORM: {{ form.form_title | slice:18:100 }} </a> </div>","title":"1. Slice"},{"location":"filter/#2-split","text":"purpose : to divide string based on input character and index put by user snippet: | split:'char ':index Example : <td data-title=\"'Block'\" sortable=\"'admin4name'\"> <div ng-if=\"row.admin4name\"> Block {{ row.admin4name | split:'Block ':1 }} </div> </td>","title":"2. Split"},{"location":"filter/#3-reverse","text":"purpose : to reverse an array snippet : | reverse Example : <div ng-repeat=\"location in project.definition.target_locations | orderBy:'createdAt' | reverse track by $index\" ng-class=\"{'add-padding': !detailLocation[$index]}\"> </div>","title":"3. Reverse"},{"location":"filter/#4-sumbykey","text":"purpose : to sum object by key snippet : data|sumByKey:'key' Example : <td><b>{{ modal.data|sumByKey:'u5male' }}</b></td>","title":"4. SumByKey"},{"location":"filter/#5-sumbykeys","text":"purpose : to sum object by more than one key snippet : data|sumByKey:['key','key'] Example : <td><b>{{ modal.data|sumByKey:['u5male','u6female'] }}</b></td>","title":"5. SumByKeys"},{"location":"filter/#6-sumarrraybykeys","text":"purpose : to sum array of objects by keys snippet: object | sumArrayByKeys:'key1':{ 'keys': 0,'keys': 0 }:skip Example : <div class=\"beneficiary-count right\"> <span style=\"font-size:1.2rem;\"> <i class=\"material-icons\" style=\"padding-right:10px;\">group</i></span> <!-- filter in app/services/ngmHelper.js --> <!-- You can use it like this --> {{ location | sumArrayByKeys:'beneficiaries':{ 'total_beneficiaries': 0 }:project.lists.skip | number }} </div>","title":"6. SumArrrayByKeys"},{"location":"filter/#7-sumarrayofarraysbykeys","text":"purpose : sum of array of object by keys with max target 2 object snippet : object | sumArrayByKeys:'key1': 'key2':{ 'keys': 0,'keys': 0 }:skip Example : <div class=\"beneficiary-count right\"> <span style=\"font-size:1.2rem;\"> <i class=\"material-icons\" style=\"padding-right:10px;\">group</i></span> <!-- filter in app/services/ngmHelper.js --> <!-- You can use it like this --> {{ location | sumArrayByKeys:'beneficiaries':'details':{ 'total_beneficiaries': 0 }:project.lists.skip | number }} </div>","title":"7. SumArrayofArraysByKeys"},{"location":"filter/#8-filterbyarray","text":"purpose : Example :","title":"8. FilterByArray"},{"location":"filter/#9-filterbeneficiary","text":"purpose : Example : <div ng-repeat=\"beneficiary in project.definition.target_beneficiaries | orderBy:'createdAt' | filterBeneficiary:project.filter\" ng-class=\"{'add-padding': !detailBeneficiaries[$index]}\"> </div>","title":"9. FilterBeneficiary"},{"location":"layout/","text":"Make New Layout Template layout To make a new layout in ReportHub there are structure model that need to follow. Here the structure : $scope.model ={ name: '', header: { div: { 'class': '', style: '' }, title: { 'class': '', style: '', title: '' }, subtitle: { 'class': '', title: '' } }, rows: [{ columns: [{ styleClass: '', widgets: [] }] },{ columns: [{ styleClass: 's12 m12 l12', widgets: [] }] }] } Description : name : name of the model header : Header of the layout header.div.style : to style the header header.title : to put title text for header header.title.style : to put style on title text header.subtitle : to put subtitle for header header.title.style : to put style on subtitle text rows : the container to put columns in one row column : the place to put a component in layout For example : $scope.model ={ name: 'tes', header: { div: { 'class': 'col s12 m12 l12 report-header', style: 'border-bottom: 3px solid;' }, title: { 'class': 'col s12 m12 l12 report-title truncate', style: 'color: blue' , title: 'Testing' }, subtitle: { 'class': 'col s12 m12 l12 report-subtitle hide-on-small-only', title: 'testing' } }, rows: [{ columns: [{ styleClass: '', widgets: [{ type: 'html', card: 'card-panel', style: 'padding:0px; height: 90px; padding-top:10px;', config: { *optional* } }] }] }] } In example above the ngm-html widget is component that we call","title":"Layout"},{"location":"layout/#make-new-layout","text":"","title":"Make New Layout"},{"location":"layout/#template-layout","text":"To make a new layout in ReportHub there are structure model that need to follow. Here the structure : $scope.model ={ name: '', header: { div: { 'class': '', style: '' }, title: { 'class': '', style: '', title: '' }, subtitle: { 'class': '', title: '' } }, rows: [{ columns: [{ styleClass: '', widgets: [] }] },{ columns: [{ styleClass: 's12 m12 l12', widgets: [] }] }] } Description : name : name of the model header : Header of the layout header.div.style : to style the header header.title : to put title text for header header.title.style : to put style on title text header.subtitle : to put subtitle for header header.title.style : to put style on subtitle text rows : the container to put columns in one row column : the place to put a component in layout For example : $scope.model ={ name: 'tes', header: { div: { 'class': 'col s12 m12 l12 report-header', style: 'border-bottom: 3px solid;' }, title: { 'class': 'col s12 m12 l12 report-title truncate', style: 'color: blue' , title: 'Testing' }, subtitle: { 'class': 'col s12 m12 l12 report-subtitle hide-on-small-only', title: 'testing' } }, rows: [{ columns: [{ styleClass: '', widgets: [{ type: 'html', card: 'card-panel', style: 'padding:0px; height: 90px; padding-top:10px;', config: { *optional* } }] }] }] } In example above the ngm-html widget is component that we call","title":"Template layout"},{"location":"module/","text":"ReportHub Main Module ReportHub build using many third party library like on diagram above. Reference Third Party Library : ngRaven : raven-js pascalprecth.translate : angular-translate ngAnimate : angular-animate ngCookies : angular-cookies ngResource : angular-resource ngRoute : angular-route ngSanitize : angular-sanitize ngTouch : angular-touch ngTable : ng-table ngCsv : ng-csv ngDropzone : ng-dropzone ngCountTo : ng-count-to ngAria : angular-aria ngMaterial : angular material highcharts-ng : highcharts leaflet-directive : leaflet xeditable : angular-xeditable infinite-scroll : ng-infinite-scroll angularUtils.directives.dirPagination : pagination directive For the custom module is module made by reporthub team to provide specific function in Reporthub. Custom Module ngm.widget.form.authentication ngm.widget.project.details ngm.widget.project.financials ngm.widget.project.report ngm.widget.organization.stocks.list ngm.widget.organization.stock ngm.widget.form.organization.list ngm.widget.upload.beneficiaries.stock.report ngmCluster ngmiMMAP Custom Module for Country ngmBangladesh ngmEthiopia Custom Module for Cluster ngmNutrition Custom Module for Project ngmDews ngmDrr ngmEpr ngmSbp ngmDrought Cluster Module Inside Cluster Module there are Dashboard Feature and Reports Feature. Dashboard Feature purpose to summarize all data collected by ReportHub and then show it to user Report Feature is to create report based on project and record every progress of the project by user Reports Report Have 4 main function 1. Project Plan/Detail 1.1 ClusterProjectDetailsCtrl Controller: ClusterProjectDetailsCtrl The purpose of this controller is to make new Project Detail/Plan or to retrieve Project Detail/Plan that already made. In the Project Detail there are 3 main form From Project Plan (mandatory) Form Target Location ( mandatory) Form Target Beneficiaries (optional) Etc. All form above manage by ClusterProjectFormDetailsCtrl Controller on ngm.widget.project.details module. 1.2 ClusterProjectFormDetailsCtrl Module:ngm.widget.project.details Controller : ClusterProjectFormDetailsCtrl Within this controller there are several services used, are as follows : ngmClusterLists : to provide list that used in the form like list activities, list clusters and many more ngmClusterHelper : to create or set up new project ngmClusterBeneficiaries: to set form for target beneficiaries ngmClusterLocations: to set up the location in target location form ngmClusterValidation : to validate form Function in this controller addLocation : function to add location in target location form. this function get the template attribute from function addLocation ngmClusterLocations . and set list Admin1,2,3 (Province,district and etc.) for the form using function filterLocations() in ngmClusterLocations . addLocationFromFile : function to add location by uploading file (CSV or Excel). addBeneficiary : to add target beenficiary for the project . this function get the template attribute from addBeneficiary ngmClusterBeneficiaries . and set the list for input in target beneficiary form. validate : function to validate all form using ngmClusterValidation validate function. 2. Financial 2.1 ClusterProjectFinancialsCtrl Controller : ClusterProjectFinancialsCtrl The purpose of this controller is to make report about budget(financial) on a project. In the Financial have a form. The form manage by ClusterProjectFormFinancialCtrl Controller on ngm.widget.project.financials module. 2.2 ClusterProjectFormFinancialCtrl Module:ngm.widget.project.financials Controller : ClusterProjectFormFinancialCtrl Within this controller there are several services used, are as follows : - ngmClusterLists : to provide currencies list that used in the form. - ngmClusterFinancial: to provide some function that used in controller. Function in this controller addBudgetItem : function to add budget in form. validateFinancialDetailsForm : function to validate the form using ngmClusterFinancial validateBudgets function. removeBudgetItem : function to remove budget. 3. Monthly Report 3.1 ClusterProjectReportsListCtrl Controller : ClusterProjectReportsListCtrl The purpose of this controller purpose is to show report for each month based on project periode. ClusterProjectReportsListCtrl Controller is to retrieve report that should be completed by user based on month. 3.2 ClusterProjectReportCtrl Controller : ClusterProjectReportCtrl The purpose of this controller is to make report monthly . The Monthly Report have a form that manage by ClusterProjectFormReportCtrl. In Monthly report form the main information that should be reported is beneficiary, so the form that should be completed is beneficiary form. 3.3 ClusterProjectFormReportCtrl Module:ngm.widget.project.report Controller : ClusterProjectFormReportCtrl Within this controller there are several services used, are as follow : ngmClusterLists : to provide currencies list that used in the form. ngmClusterHelper : to clean the report ngmClusterBeneficiaries: to set form for beneficiaries , to set intial atrribute to make new beneficiary, to remove report etc. ngmClusterValidation : to validate the form function in this controller addBeneficiary : function to add beneficairy in form. Using ngmClusterBeneficiaries addBeneficiary function to set inital attribute/property and ngmClusterBeneficiaries setBeneficiariesInputs function to set the input that will be used in form. copyPreviousMonth: function to copy report from previous month report. removeBeneficiary: function to remove beneficiary from report using ngmClusterBeneficiaries removeBeneficiary removeReport: functiom remove report validateBeneficiariesDetailsForm: function to validate all beneficiary form the monthly report using ngmClusterValidation validateBeneficiaries function. 4. Stock Report 4.1 ClusterOrganizationStocksListCtrl This Controller purpose is to show stock report for each month based on project periode. ClusterOrganizationStocksListCtrl Controller is to retrieve report that should be completed by user based on month. Another purpose is to add a location warehouse for stock. Form to add new location is manage by ClusterOrganizationStocksFormList Controller on ngm.widget.organization.stocks.list . 4.2 ClusterOrganizationStocksFormList Module: ngm.widget.organization.stocks.list Controller: ClusterOrganizationStocksFormList Within this controller there are several services used, are as follow : - ngmClusterHelper : to set new location attribute function in this controller addlocation : function to add new warehouse location removeLocation: function to remove warehouse location 4.3 ClusterOrganizationStockReportCtrl The purpose of this controller is to make stock report . The Stock Report have form that manage by ClusterOrganizationStockForm Controller on ngm.widget.organization.stock module 4.4 ClusterOrganizationStockForm Module: ngm.widget.organization.stock Controller: ClusterOrganizationStockForm Within this controller there are several services used, are as follow : ngmClusterLists : to provide currencies list that used in the form. ngmClusterHelper : to clean the report function in this controller addStock : function to add stock in form removeStock : functio to remove stock from report validateForm : function to validate stock form copyPrevReport : function to copy report stock from previous report. Authentication Module A module that provides a function to authenticating and manage user (CRUD) using ngmAuth services. And the controller that manage all the form for authentication are AuthenticationFormCtrl . Below is list of function that provides by this module. 1. Sign In / Register 2. Log In 3. Log Out 4. Update Profile 5. Delete User 6. Reset Password 7. Manage User Access","title":"Modules"},{"location":"module/#reporthub-main-module","text":"ReportHub build using many third party library like on diagram above.","title":"ReportHub Main Module"},{"location":"module/#_1","text":"Reference Third Party Library : ngRaven : raven-js pascalprecth.translate : angular-translate ngAnimate : angular-animate ngCookies : angular-cookies ngResource : angular-resource ngRoute : angular-route ngSanitize : angular-sanitize ngTouch : angular-touch ngTable : ng-table ngCsv : ng-csv ngDropzone : ng-dropzone ngCountTo : ng-count-to ngAria : angular-aria ngMaterial : angular material highcharts-ng : highcharts leaflet-directive : leaflet xeditable : angular-xeditable infinite-scroll : ng-infinite-scroll angularUtils.directives.dirPagination : pagination directive For the custom module is module made by reporthub team to provide specific function in Reporthub.","title":""},{"location":"module/#custom-module","text":"ngm.widget.form.authentication ngm.widget.project.details ngm.widget.project.financials ngm.widget.project.report ngm.widget.organization.stocks.list ngm.widget.organization.stock ngm.widget.form.organization.list ngm.widget.upload.beneficiaries.stock.report ngmCluster ngmiMMAP","title":"Custom Module"},{"location":"module/#custom-module-for-country","text":"ngmBangladesh ngmEthiopia","title":"Custom Module for Country"},{"location":"module/#custom-module-for-cluster","text":"ngmNutrition","title":"Custom Module for Cluster"},{"location":"module/#custom-module-for-project","text":"ngmDews ngmDrr ngmEpr ngmSbp ngmDrought","title":"Custom Module for Project"},{"location":"module/#cluster-module","text":"Inside Cluster Module there are Dashboard Feature and Reports Feature. Dashboard Feature purpose to summarize all data collected by ReportHub and then show it to user Report Feature is to create report based on project and record every progress of the project by user","title":"Cluster Module"},{"location":"module/#reports","text":"Report Have 4 main function","title":"Reports"},{"location":"module/#1-project-plandetail","text":"","title":"1. Project Plan/Detail"},{"location":"module/#11-clusterprojectdetailsctrl","text":"Controller: ClusterProjectDetailsCtrl The purpose of this controller is to make new Project Detail/Plan or to retrieve Project Detail/Plan that already made. In the Project Detail there are 3 main form From Project Plan (mandatory) Form Target Location ( mandatory) Form Target Beneficiaries (optional) Etc. All form above manage by ClusterProjectFormDetailsCtrl Controller on ngm.widget.project.details module.","title":"1.1 ClusterProjectDetailsCtrl"},{"location":"module/#12-clusterprojectformdetailsctrl","text":"Module:ngm.widget.project.details Controller : ClusterProjectFormDetailsCtrl Within this controller there are several services used, are as follows : ngmClusterLists : to provide list that used in the form like list activities, list clusters and many more ngmClusterHelper : to create or set up new project ngmClusterBeneficiaries: to set form for target beneficiaries ngmClusterLocations: to set up the location in target location form ngmClusterValidation : to validate form Function in this controller addLocation : function to add location in target location form. this function get the template attribute from function addLocation ngmClusterLocations . and set list Admin1,2,3 (Province,district and etc.) for the form using function filterLocations() in ngmClusterLocations . addLocationFromFile : function to add location by uploading file (CSV or Excel). addBeneficiary : to add target beenficiary for the project . this function get the template attribute from addBeneficiary ngmClusterBeneficiaries . and set the list for input in target beneficiary form. validate : function to validate all form using ngmClusterValidation validate function.","title":"1.2 ClusterProjectFormDetailsCtrl"},{"location":"module/#2-financial","text":"","title":"2. Financial"},{"location":"module/#21-clusterprojectfinancialsctrl","text":"Controller : ClusterProjectFinancialsCtrl The purpose of this controller is to make report about budget(financial) on a project. In the Financial have a form. The form manage by ClusterProjectFormFinancialCtrl Controller on ngm.widget.project.financials module.","title":"2.1 ClusterProjectFinancialsCtrl"},{"location":"module/#22-clusterprojectformfinancialctrl","text":"Module:ngm.widget.project.financials Controller : ClusterProjectFormFinancialCtrl Within this controller there are several services used, are as follows : - ngmClusterLists : to provide currencies list that used in the form. - ngmClusterFinancial: to provide some function that used in controller. Function in this controller addBudgetItem : function to add budget in form. validateFinancialDetailsForm : function to validate the form using ngmClusterFinancial validateBudgets function. removeBudgetItem : function to remove budget.","title":"2.2 ClusterProjectFormFinancialCtrl"},{"location":"module/#3-monthly-report","text":"","title":"3. Monthly Report"},{"location":"module/#31-clusterprojectreportslistctrl","text":"Controller : ClusterProjectReportsListCtrl The purpose of this controller purpose is to show report for each month based on project periode. ClusterProjectReportsListCtrl Controller is to retrieve report that should be completed by user based on month.","title":"3.1 ClusterProjectReportsListCtrl"},{"location":"module/#32-clusterprojectreportctrl","text":"Controller : ClusterProjectReportCtrl The purpose of this controller is to make report monthly . The Monthly Report have a form that manage by ClusterProjectFormReportCtrl. In Monthly report form the main information that should be reported is beneficiary, so the form that should be completed is beneficiary form.","title":"3.2 ClusterProjectReportCtrl"},{"location":"module/#33-clusterprojectformreportctrl","text":"Module:ngm.widget.project.report Controller : ClusterProjectFormReportCtrl Within this controller there are several services used, are as follow : ngmClusterLists : to provide currencies list that used in the form. ngmClusterHelper : to clean the report ngmClusterBeneficiaries: to set form for beneficiaries , to set intial atrribute to make new beneficiary, to remove report etc. ngmClusterValidation : to validate the form function in this controller addBeneficiary : function to add beneficairy in form. Using ngmClusterBeneficiaries addBeneficiary function to set inital attribute/property and ngmClusterBeneficiaries setBeneficiariesInputs function to set the input that will be used in form. copyPreviousMonth: function to copy report from previous month report. removeBeneficiary: function to remove beneficiary from report using ngmClusterBeneficiaries removeBeneficiary removeReport: functiom remove report validateBeneficiariesDetailsForm: function to validate all beneficiary form the monthly report using ngmClusterValidation validateBeneficiaries function.","title":"3.3 ClusterProjectFormReportCtrl"},{"location":"module/#4-stock-report","text":"","title":"4. Stock Report"},{"location":"module/#41-clusterorganizationstockslistctrl","text":"This Controller purpose is to show stock report for each month based on project periode. ClusterOrganizationStocksListCtrl Controller is to retrieve report that should be completed by user based on month. Another purpose is to add a location warehouse for stock. Form to add new location is manage by ClusterOrganizationStocksFormList Controller on ngm.widget.organization.stocks.list .","title":"4.1 ClusterOrganizationStocksListCtrl"},{"location":"module/#42-clusterorganizationstocksformlist","text":"Module: ngm.widget.organization.stocks.list Controller: ClusterOrganizationStocksFormList Within this controller there are several services used, are as follow : - ngmClusterHelper : to set new location attribute function in this controller addlocation : function to add new warehouse location removeLocation: function to remove warehouse location","title":"4.2 ClusterOrganizationStocksFormList"},{"location":"module/#43-clusterorganizationstockreportctrl","text":"The purpose of this controller is to make stock report . The Stock Report have form that manage by ClusterOrganizationStockForm Controller on ngm.widget.organization.stock module","title":"4.3 ClusterOrganizationStockReportCtrl"},{"location":"module/#44-clusterorganizationstockform","text":"Module: ngm.widget.organization.stock Controller: ClusterOrganizationStockForm Within this controller there are several services used, are as follow : ngmClusterLists : to provide currencies list that used in the form. ngmClusterHelper : to clean the report function in this controller addStock : function to add stock in form removeStock : functio to remove stock from report validateForm : function to validate stock form copyPrevReport : function to copy report stock from previous report.","title":"4.4 ClusterOrganizationStockForm"},{"location":"module/#authentication-module","text":"A module that provides a function to authenticating and manage user (CRUD) using ngmAuth services. And the controller that manage all the form for authentication are AuthenticationFormCtrl . Below is list of function that provides by this module.","title":"Authentication Module"},{"location":"module/#1-sign-in-register","text":"","title":"1. Sign In / Register"},{"location":"module/#2-log-in","text":"","title":"2. Log In"},{"location":"module/#3-log-out","text":"","title":"3. Log Out"},{"location":"module/#4-update-profile","text":"","title":"4. Update Profile"},{"location":"module/#5-delete-user","text":"","title":"5. Delete User"},{"location":"module/#6-reset-password","text":"","title":"6. Reset Password"},{"location":"module/#7-manage-user-access","text":"","title":"7. Manage User Access"},{"location":"services/","text":"ngmUser get() use : ngmUser purpose : to get user from storage set() use : ngmUser purpose : to set user to storage unset() use : ngmUser purpose : to unset from storage hasRole() use : ngmUser purpose : to check user role hasAnyRole() use : ngmUser purpose : to match any role ngmAuth register() use : ngmAuth purpose : to register new user in ReportHub updateProfile() use : ngmAuth purpose : to update user information login() use : ngmAuth purpose : to login in Reporthub passwordResetSend() use : ngmAuth purpose : to send request to reset password passwordReset() use : ngmAuth purpose : to reset password logout() use : ngmAuth purpose : to logout from ReportHub setSessionTimeout() use : ngmAuth purpose : to manage user session timeout grantPublicAccess use : ngmAuth purpose : to setup a public user isAnonymous() use : ngmAuth purpose : to check if user is anonymus or not isAuthenticated() use : ngmAuth purpose : to check if user is login or not getUserRoleDescriptions() use : ngmAuth purpose : to get user role description userPermissions() use : ngmAuth purpose : to get user permissions definitions canDo() use : ngmAuth purpose : to checks if user can edit in input view zones getRouteParams() use : ngmAuth purpose : to get user route restiction params getMenuParams() use : ngmAuth purpose : to get user user menu params getEditableRoles() use : ngmAuth purpose : to get user's allowed roles to edit on users ngmPermissions In ngmPermissions contain a list of a role to assign user-level access ngmClusterHelper setForm() use : ClusterProjectFormDetailsCtrl (Page Project Detail ). purpose : to add some addional list and some check list based on project information getNewProject() use : ClusterProjectDetailsCtrl (Page Project Detail ). purpose : to set new project getProjectHrpCode() use : ngmClusterHelper.getNewProject(). purpose : to set HRP code for new project based on project admin0pcode or country getProjectHrpName() use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to set HRP code for project based on project admin0pcode or country compileInterClusterActivities() use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all inter cluster activities selected by user compileStrategicObjectives() use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all stragetic objective selected by user compileMpcPurpose() use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all mpc cash purpose selected by user compileActivityType() use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all activity type selected by user compileDonor() use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all donor selected by user getCleanWarehouseLocation() use : ClusterOrganizationStocksFormList (page Stocks) purpose : to set attribute for location warehouse form and delete unused atrribute/data. getCleanStocks() use : ClusterOrganizationStockForm (page Stock Report) purpose : to delete unused atrribute/data when add new stock report. getCleanTargetLocation() use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to set site_id ,site_lng and site_lat of target location attribute based on level location. getCleanReport() use : ClusterProjectFormReportCtrl (Page Monthly Report ) purpose : to update entire report locations attribute (\"site_id\" ,\"site_lng\" and \"site_lat\" ) and beneficiary (\"report_status\") getCountryMenu() use : ClusterProjectProjectsCtrl (Page Project List) purpose : provide list of country for menu in project list page getRegionMenu() use : ClusterProjectProjectsCtrl (Page Project List) purpose : provide list of region for menu in project list page cleanCopyProject() use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to remove unused attribute from copied project. the attribute that remove is project \"id\", \"updatedAt\",\"createdAt\", \"project_end_date\",\"project_start_date\",\"project_status\" target location and target beneficiary \"id\", \"project_id\" ngmClusterValidation updateSelect() use : ClusterOrganizationStocksFormList (Page Stocks) purpose : to update in DOM project_details_valid() use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate form Project Plan projectDescription() use : ngmClusterValidation purpose : to validate field Project Description in form Project Plan activity_type_valid() use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to check if user select the activity type or not project_donor_valid() use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to check if user select donor or not targetBeneficiariesValidate() use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate Target Beneficiary Form targetBeneficiaryValidate() use : ngmClusterValidation purpose : to help targetBeneficiariesValidate function to check every attribute in target beneficiary targetLocationsValidate() use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate Target Location Form for new form targetLocationValidate() use : ngmClusterValidation purpose : to help targetLocationsValidate function to check every attribue in target location target_locations_valid() use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate Target Location Form for old form validatePartial() use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate Target Location Form for old form validationInputFromFile() use : ClusterProjectFormReportCtrl purpose : to validate beneficiary from upload file validationStockInputFromFile() use : ClusterOrganizationStockForm purpose : to validate stock from upload file validatiOnprojectDetailsFromFile() use : ClusterOrganizationStockForm purpose : to validate Project Detail from upload file validate() use : clusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate all form in Project Plan/Detail page validateBeneficiaries() use : ngmClusterValidation, ClusterProjectFormReportCtrl purpose : to validate beneficiaries in monthly report ngmClusterBeneficiaries addBeneficiary() use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to set initial property/atribute for beneficiary or target beneficiary form. setLocationsForm() use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : set beneficiary form for each location in monthly report using setBeneficiariesForm setBeneficiariesForm() use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to set beneficiary form using setBeneficiariesInputs function setBeneficiariesInputs() use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to set form for beneficiary form and select which field should show in form based on config. updateBeneficiaires() use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to update value attribute of beneficiary ( total_male , total_female and total_beneficiaries ) beneficiaryFormComplete() use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl purpose : to validate old form beneficiary in monthly report removeBeneficiary() use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl purpose : to remove beneficiary in monthly report removeTargetBeneficiary() use : ngmClusterBeneficiaries,ClusterProjectFormDetailsCtrl purpose : to remove beneficiary in project plan/detail ngmClusterLists setLists() use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to return lists getStockLists() use : ClusterOrganizationStockForm, ClusterUploadBeneficiariesStockCtrl, ngmClusterDownloads, ngmClusterLists purpose : to provide lists for stock setClusterLists() use : ngmClusterLists purpose : get list for cluster reporting from API setOrganizationUsersList() use : ClusterProjectFormReportCtrl, ClusterProjectFormDetailsCtrl, ngmClusterLists purpose : to get information about organization list user getIndicators() use : ngmClusterLists purpose : to provide indicator list for monthly report getDeliveryTypes() use : ngmClusterLists purpose : to provide delivery type list for beneficiary getMpcPurpose() use : ngmClusterLists purpose : to provide mpc purpose type list for beneficiary getMpcMechanismTypes() use : ngmClusterLists purpose : to provide mechanism type list for beneficiary getClusters() use : ngmClusterLists purpose : to provide cluster list getActivities() use : ngmClusterLists purpose : to provide activities use in project plan/detail filterActiveDate() use : ngmClusterLists purpose : to filter activities list by start and date of activity getProjectActivityTypes() use : ngmClusterLists purpose : to provide activity type list in project plan/detail getOrganizations() use : ngmClusterLists purpose :to provide organization list getProjectClasifications() use : ngmClusterLists purpose : to provide project clasification list getDonors() use : ngmClusterLists purpose : to provide donor list getCurrencies() use : ngmClusterLists purpose : to providw currencies list getStrategicObjectives() use : ngmClusterLists purpose : to provide strategic objective list getCategoryTypes() use : ngmClusterLists purpose : to provide category type list for getUnits() use : ngmClusterLists purpose : to provide unit list getBeneficiaries() use : ngmClusterLists purpose : to provide beneficiary type list getBeneficiariesCategories() use : ngmClusterLists purpose : to provide beneficiary category list getSiteImplementation() use : ngmClusterLists purpose : to provide site implementation list for location getSiteTypes() use : ngmClusterLists purpose : to provide site type list for location filterDuplicates() use : ngmClusterLists purpose : to remove duplicate object in list getStockTargetedGroups() use : ngmClusterLists purpose : to provide stock targeted list for stock getHrpBeneficiaries() use : ngmClusterLists purpose : to provide hrp beneficiary type list for beneficary getProjectDetails() use : ngmClusterLists purpose : to provide project details list ngmClusterFinancial validateBudgets() use : ClusterProjectFormFinancialCtrl purpose : to validate budget form in financial form using validateBudget validateBudget() use : ngmCLusterFinancial purpose : to validate each attribute in budget form inputChange() use : ngmCLusterFinancial purpose : to change label back to normal if the label is added error class updateNumber() use : ngmCLusterFinancial purpose : to update certain attribute in budget form. ngmClusterLocations openNewLocation() use : ngmClusterLocations purpose : to open location form and set attribute (using addLocation function) in monthly report page addNewLocation() use : ngmClusterLocations purpose : to add new location in monthly report page addLocation() use : ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to set attribute for location form removeLocation() use : ngmClusterLocations purpose : to remove location in target location in project detail/plan showReporter() use : ngmClusterLocations,ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to show list of user that make a report adminOnChange() use : ClusterProjectFormReportCtrl purpose : to change list if admin1, admin2 or admin3 is changing updateReporter() use : ngmClusterLocations,ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to update reporter(list of user that make a report) updateSiteImplementation() use : ngmClusterLocations purpose : to update site implementation list in location form updateSiteType() use : ngmClusterLocations purpose : to update site type list in location form updateAdminSite() use : ngmClusterLocations purpose : to update site name list in location form updateLocation() use : ngmClusterLocations purpose : to update location filterLocations() use : ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to filter Location admin 1,admin2,admin3,admin4,admin5 and adminsite list resetLocations() use : ngmClusterLocations purpose : to reset location property/attribute setLocationAdminSelect() use : ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to set list Location admin1,admin2,admin3 in location form setSiteTypeAndImplementationSelect() use : ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to set list of site_type && site_implementation in location form","title":"Services"},{"location":"services/#ngmuser","text":"","title":"ngmUser"},{"location":"services/#get","text":"use : ngmUser purpose : to get user from storage","title":"get()"},{"location":"services/#set","text":"use : ngmUser purpose : to set user to storage","title":"set()"},{"location":"services/#unset","text":"use : ngmUser purpose : to unset from storage","title":"unset()"},{"location":"services/#hasrole","text":"use : ngmUser purpose : to check user role","title":"hasRole()"},{"location":"services/#hasanyrole","text":"use : ngmUser purpose : to match any role","title":"hasAnyRole()"},{"location":"services/#ngmauth","text":"","title":"ngmAuth"},{"location":"services/#register","text":"use : ngmAuth purpose : to register new user in ReportHub","title":"register()"},{"location":"services/#updateprofile","text":"use : ngmAuth purpose : to update user information","title":"updateProfile()"},{"location":"services/#login","text":"use : ngmAuth purpose : to login in Reporthub","title":"login()"},{"location":"services/#passwordresetsend","text":"use : ngmAuth purpose : to send request to reset password","title":"passwordResetSend()"},{"location":"services/#passwordreset","text":"use : ngmAuth purpose : to reset password","title":"passwordReset()"},{"location":"services/#logout","text":"use : ngmAuth purpose : to logout from ReportHub","title":"logout()"},{"location":"services/#setsessiontimeout","text":"use : ngmAuth purpose : to manage user session timeout","title":"setSessionTimeout()"},{"location":"services/#grantpublicaccess","text":"use : ngmAuth purpose : to setup a public user","title":"grantPublicAccess"},{"location":"services/#isanonymous","text":"use : ngmAuth purpose : to check if user is anonymus or not","title":"isAnonymous()"},{"location":"services/#isauthenticated","text":"use : ngmAuth purpose : to check if user is login or not","title":"isAuthenticated()"},{"location":"services/#getuserroledescriptions","text":"use : ngmAuth purpose : to get user role description","title":"getUserRoleDescriptions()"},{"location":"services/#userpermissions","text":"use : ngmAuth purpose : to get user permissions definitions","title":"userPermissions()"},{"location":"services/#cando","text":"use : ngmAuth purpose : to checks if user can edit in input view zones","title":"canDo()"},{"location":"services/#getrouteparams","text":"use : ngmAuth purpose : to get user route restiction params","title":"getRouteParams()"},{"location":"services/#getmenuparams","text":"use : ngmAuth purpose : to get user user menu params","title":"getMenuParams()"},{"location":"services/#geteditableroles","text":"use : ngmAuth purpose : to get user's allowed roles to edit on users","title":"getEditableRoles()"},{"location":"services/#ngmpermissions","text":"In ngmPermissions contain a list of a role to assign user-level access","title":"ngmPermissions"},{"location":"services/#ngmclusterhelper","text":"","title":"ngmClusterHelper"},{"location":"services/#setform","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ). purpose : to add some addional list and some check list based on project information","title":"setForm()"},{"location":"services/#getnewproject","text":"use : ClusterProjectDetailsCtrl (Page Project Detail ). purpose : to set new project","title":"getNewProject()"},{"location":"services/#getprojecthrpcode","text":"use : ngmClusterHelper.getNewProject(). purpose : to set HRP code for new project based on project admin0pcode or country","title":"getProjectHrpCode()"},{"location":"services/#getprojecthrpname","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to set HRP code for project based on project admin0pcode or country","title":"getProjectHrpName()"},{"location":"services/#compileinterclusteractivities","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all inter cluster activities selected by user","title":"compileInterClusterActivities()"},{"location":"services/#compilestrategicobjectives","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all stragetic objective selected by user","title":"compileStrategicObjectives()"},{"location":"services/#compilempcpurpose","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all mpc cash purpose selected by user","title":"compileMpcPurpose()"},{"location":"services/#compileactivitytype","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all activity type selected by user","title":"compileActivityType()"},{"location":"services/#compiledonor","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to compile all donor selected by user","title":"compileDonor()"},{"location":"services/#getcleanwarehouselocation","text":"use : ClusterOrganizationStocksFormList (page Stocks) purpose : to set attribute for location warehouse form and delete unused atrribute/data.","title":"getCleanWarehouseLocation()"},{"location":"services/#getcleanstocks","text":"use : ClusterOrganizationStockForm (page Stock Report) purpose : to delete unused atrribute/data when add new stock report.","title":"getCleanStocks()"},{"location":"services/#getcleantargetlocation","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to set site_id ,site_lng and site_lat of target location attribute based on level location.","title":"getCleanTargetLocation()"},{"location":"services/#getcleanreport","text":"use : ClusterProjectFormReportCtrl (Page Monthly Report ) purpose : to update entire report locations attribute (\"site_id\" ,\"site_lng\" and \"site_lat\" ) and beneficiary (\"report_status\")","title":"getCleanReport()"},{"location":"services/#getcountrymenu","text":"use : ClusterProjectProjectsCtrl (Page Project List) purpose : provide list of country for menu in project list page","title":"getCountryMenu()"},{"location":"services/#getregionmenu","text":"use : ClusterProjectProjectsCtrl (Page Project List) purpose : provide list of region for menu in project list page","title":"getRegionMenu()"},{"location":"services/#cleancopyproject","text":"use : ClusterProjectFormDetailsCtrl (Page Project Detail ) purpose : to remove unused attribute from copied project. the attribute that remove is project \"id\", \"updatedAt\",\"createdAt\", \"project_end_date\",\"project_start_date\",\"project_status\" target location and target beneficiary \"id\", \"project_id\"","title":"cleanCopyProject()"},{"location":"services/#ngmclustervalidation","text":"","title":"ngmClusterValidation"},{"location":"services/#updateselect","text":"use : ClusterOrganizationStocksFormList (Page Stocks) purpose : to update in DOM","title":"updateSelect()"},{"location":"services/#project_details_valid","text":"use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate form Project Plan","title":"project_details_valid()"},{"location":"services/#projectdescription","text":"use : ngmClusterValidation purpose : to validate field Project Description in form Project Plan","title":"projectDescription()"},{"location":"services/#activity_type_valid","text":"use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to check if user select the activity type or not","title":"activity_type_valid()"},{"location":"services/#project_donor_valid","text":"use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to check if user select donor or not","title":"project_donor_valid()"},{"location":"services/#targetbeneficiariesvalidate","text":"use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate Target Beneficiary Form","title":"targetBeneficiariesValidate()"},{"location":"services/#targetbeneficiaryvalidate","text":"use : ngmClusterValidation purpose : to help targetBeneficiariesValidate function to check every attribute in target beneficiary","title":"targetBeneficiaryValidate()"},{"location":"services/#targetlocationsvalidate","text":"use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate Target Location Form for new form","title":"targetLocationsValidate()"},{"location":"services/#targetlocationvalidate","text":"use : ngmClusterValidation purpose : to help targetLocationsValidate function to check every attribue in target location","title":"targetLocationValidate()"},{"location":"services/#target_locations_valid","text":"use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate Target Location Form for old form","title":"target_locations_valid()"},{"location":"services/#validatepartial","text":"use : ClusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate Target Location Form for old form","title":"validatePartial()"},{"location":"services/#validationinputfromfile","text":"use : ClusterProjectFormReportCtrl purpose : to validate beneficiary from upload file","title":"validationInputFromFile()"},{"location":"services/#validationstockinputfromfile","text":"use : ClusterOrganizationStockForm purpose : to validate stock from upload file","title":"validationStockInputFromFile()"},{"location":"services/#validationprojectdetailsfromfile","text":"use : ClusterOrganizationStockForm purpose : to validate Project Detail from upload file","title":"validatiOnprojectDetailsFromFile()"},{"location":"services/#validate","text":"use : clusterProjectFormDetailsCtrl, ngmClusterValidation purpose : to validate all form in Project Plan/Detail page","title":"validate()"},{"location":"services/#validatebeneficiaries","text":"use : ngmClusterValidation, ClusterProjectFormReportCtrl purpose : to validate beneficiaries in monthly report","title":"validateBeneficiaries()"},{"location":"services/#ngmclusterbeneficiaries","text":"","title":"ngmClusterBeneficiaries"},{"location":"services/#addbeneficiary","text":"use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to set initial property/atribute for beneficiary or target beneficiary form.","title":"addBeneficiary()"},{"location":"services/#setlocationsform","text":"use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : set beneficiary form for each location in monthly report using setBeneficiariesForm","title":"setLocationsForm()"},{"location":"services/#setbeneficiariesform","text":"use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to set beneficiary form using setBeneficiariesInputs function","title":"setBeneficiariesForm()"},{"location":"services/#setbeneficiariesinputs","text":"use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to set form for beneficiary form and select which field should show in form based on config.","title":"setBeneficiariesInputs()"},{"location":"services/#updatebeneficiaires","text":"use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to update value attribute of beneficiary ( total_male , total_female and total_beneficiaries )","title":"updateBeneficiaires()"},{"location":"services/#beneficiaryformcomplete","text":"use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl purpose : to validate old form beneficiary in monthly report","title":"beneficiaryFormComplete()"},{"location":"services/#removebeneficiary","text":"use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl purpose : to remove beneficiary in monthly report","title":"removeBeneficiary()"},{"location":"services/#removetargetbeneficiary","text":"use : ngmClusterBeneficiaries,ClusterProjectFormDetailsCtrl purpose : to remove beneficiary in project plan/detail","title":"removeTargetBeneficiary()"},{"location":"services/#ngmclusterlists","text":"","title":"ngmClusterLists"},{"location":"services/#setlists","text":"use : ngmClusterBeneficiaries,ClusterProjectFormReportCtrl,ClusterProjectFormDetailsCtrl purpose : to return lists","title":"setLists()"},{"location":"services/#getstocklists","text":"use : ClusterOrganizationStockForm, ClusterUploadBeneficiariesStockCtrl, ngmClusterDownloads, ngmClusterLists purpose : to provide lists for stock","title":"getStockLists()"},{"location":"services/#setclusterlists","text":"use : ngmClusterLists purpose : get list for cluster reporting from API","title":"setClusterLists()"},{"location":"services/#setorganizationuserslist","text":"use : ClusterProjectFormReportCtrl, ClusterProjectFormDetailsCtrl, ngmClusterLists purpose : to get information about organization list user","title":"setOrganizationUsersList()"},{"location":"services/#getindicators","text":"use : ngmClusterLists purpose : to provide indicator list for monthly report","title":"getIndicators()"},{"location":"services/#getdeliverytypes","text":"use : ngmClusterLists purpose : to provide delivery type list for beneficiary","title":"getDeliveryTypes()"},{"location":"services/#getmpcpurpose","text":"use : ngmClusterLists purpose : to provide mpc purpose type list for beneficiary","title":"getMpcPurpose()"},{"location":"services/#getmpcmechanismtypes","text":"use : ngmClusterLists purpose : to provide mechanism type list for beneficiary","title":"getMpcMechanismTypes()"},{"location":"services/#getclusters","text":"use : ngmClusterLists purpose : to provide cluster list","title":"getClusters()"},{"location":"services/#getactivities","text":"use : ngmClusterLists purpose : to provide activities use in project plan/detail","title":"getActivities()"},{"location":"services/#filteractivedate","text":"use : ngmClusterLists purpose : to filter activities list by start and date of activity","title":"filterActiveDate()"},{"location":"services/#getprojectactivitytypes","text":"use : ngmClusterLists purpose : to provide activity type list in project plan/detail","title":"getProjectActivityTypes()"},{"location":"services/#getorganizations","text":"use : ngmClusterLists purpose :to provide organization list","title":"getOrganizations()"},{"location":"services/#getprojectclasifications","text":"use : ngmClusterLists purpose : to provide project clasification list","title":"getProjectClasifications()"},{"location":"services/#getdonors","text":"use : ngmClusterLists purpose : to provide donor list","title":"getDonors()"},{"location":"services/#getcurrencies","text":"use : ngmClusterLists purpose : to providw currencies list","title":"getCurrencies()"},{"location":"services/#getstrategicobjectives","text":"use : ngmClusterLists purpose : to provide strategic objective list","title":"getStrategicObjectives()"},{"location":"services/#getcategorytypes","text":"use : ngmClusterLists purpose : to provide category type list for","title":"getCategoryTypes()"},{"location":"services/#getunits","text":"use : ngmClusterLists purpose : to provide unit list","title":"getUnits()"},{"location":"services/#getbeneficiaries","text":"use : ngmClusterLists purpose : to provide beneficiary type list","title":"getBeneficiaries()"},{"location":"services/#getbeneficiariescategories","text":"use : ngmClusterLists purpose : to provide beneficiary category list","title":"getBeneficiariesCategories()"},{"location":"services/#getsiteimplementation","text":"use : ngmClusterLists purpose : to provide site implementation list for location","title":"getSiteImplementation()"},{"location":"services/#getsitetypes","text":"use : ngmClusterLists purpose : to provide site type list for location","title":"getSiteTypes()"},{"location":"services/#filterduplicates","text":"use : ngmClusterLists purpose : to remove duplicate object in list","title":"filterDuplicates()"},{"location":"services/#getstocktargetedgroups","text":"use : ngmClusterLists purpose : to provide stock targeted list for stock","title":"getStockTargetedGroups()"},{"location":"services/#gethrpbeneficiaries","text":"use : ngmClusterLists purpose : to provide hrp beneficiary type list for beneficary","title":"getHrpBeneficiaries()"},{"location":"services/#getprojectdetails","text":"use : ngmClusterLists purpose : to provide project details list","title":"getProjectDetails()"},{"location":"services/#ngmclusterfinancial","text":"","title":"ngmClusterFinancial"},{"location":"services/#validatebudgets","text":"use : ClusterProjectFormFinancialCtrl purpose : to validate budget form in financial form using validateBudget","title":"validateBudgets()"},{"location":"services/#validatebudget","text":"use : ngmCLusterFinancial purpose : to validate each attribute in budget form","title":"validateBudget()"},{"location":"services/#inputchange","text":"use : ngmCLusterFinancial purpose : to change label back to normal if the label is added error class","title":"inputChange()"},{"location":"services/#updatenumber","text":"use : ngmCLusterFinancial purpose : to update certain attribute in budget form.","title":"updateNumber()"},{"location":"services/#ngmclusterlocations","text":"","title":"ngmClusterLocations"},{"location":"services/#opennewlocation","text":"use : ngmClusterLocations purpose : to open location form and set attribute (using addLocation function) in monthly report page","title":"openNewLocation()"},{"location":"services/#addnewlocation","text":"use : ngmClusterLocations purpose : to add new location in monthly report page","title":"addNewLocation()"},{"location":"services/#addlocation","text":"use : ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to set attribute for location form","title":"addLocation()"},{"location":"services/#removelocation","text":"use : ngmClusterLocations purpose : to remove location in target location in project detail/plan","title":"removeLocation()"},{"location":"services/#showreporter","text":"use : ngmClusterLocations,ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to show list of user that make a report","title":"showReporter()"},{"location":"services/#adminonchange","text":"use : ClusterProjectFormReportCtrl purpose : to change list if admin1, admin2 or admin3 is changing","title":"adminOnChange()"},{"location":"services/#updatereporter","text":"use : ngmClusterLocations,ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to update reporter(list of user that make a report)","title":"updateReporter()"},{"location":"services/#updatesiteimplementation","text":"use : ngmClusterLocations purpose : to update site implementation list in location form","title":"updateSiteImplementation()"},{"location":"services/#updatesitetype","text":"use : ngmClusterLocations purpose : to update site type list in location form","title":"updateSiteType()"},{"location":"services/#updateadminsite","text":"use : ngmClusterLocations purpose : to update site name list in location form","title":"updateAdminSite()"},{"location":"services/#updatelocation","text":"use : ngmClusterLocations purpose : to update location","title":"updateLocation()"},{"location":"services/#filterlocations","text":"use : ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to filter Location admin 1,admin2,admin3,admin4,admin5 and adminsite list","title":"filterLocations()"},{"location":"services/#resetlocations","text":"use : ngmClusterLocations purpose : to reset location property/attribute","title":"resetLocations()"},{"location":"services/#setlocationadminselect","text":"use : ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to set list Location admin1,admin2,admin3 in location form","title":"setLocationAdminSelect()"},{"location":"services/#setsitetypeandimplementationselect","text":"use : ngmClusterLocations, ClusterProjectFormDetailsCtrl purpose : to set list of site_type && site_implementation in location form","title":"setSiteTypeAndImplementationSelect()"},{"location":"start/","text":"ReportHub Reporting Workflow. Decision Support. Real-Time. Developer documentation for local project setup Requirements Vagrant v1.9.xx or newer version VirtualBox v5.1.xx or newer version Getting Started The first steps will be to establish a local development environment on your machine. Steps Install Software Requirements listed above on your local machine Make a folder with name Reporthub $ mkdir Reporthub $ cd ReportHub Make a folder name ngm $ mkdir ngm Go to here Download all the folder And put it to folder Reporthub/ngm , except the following folders: ngm-reportEngine ngm-reportHub ngm-reportPrint ngm-reportShell Fork the repo below to your github : https://github.com/iMMAP/ngm-reportHub . https://github.com/iMMAP/ngm-reportEngine . Contributing Code Please review the following links in order to understand how to contribute code to ReportHub repositories GitHub Fork & Pull Approach Fork & Pull Approach Github Flow Vagrant Local Server Run the following commands to setup the local development environment. Steps on the cmd line, navigate to ReportHub/ngm folder in your local machine $ cd ReportHub/ngm in ReportHub/ngm folder fetch ngm-reportShell repo $ git clone https://github.com/iMMAP/ngm-reportShell.git cd into ngm-reportShell $ cd ngm-reportShell Open ngm-reporthub.shell.build.sh Uncomment and update the gitHub repository locations to your forked version of the code # UPDATE TO YOUR FORKED REPO! sudo git clone https://github.com/<your.fork>/ngm-reportHub.git # UPDATE TO YOUR FORKED REPO! sudo git clone https://github.com/<your.fork>/ngm-reportEngine.git Run Vagrant Up command $ vagrant up NOTE: This will take some time to fetch the Ubuntu Lts 14.04 VirtualBox image as well as install server software to establish a replica local server environemnt During install, review VirtualBox configurations in ngm-reportShell/Vagrantfile ngm-reportShell/ngm-reporthub.shell.build.sh Running ReportHub Once the VirtualBox is completed installation, you can access the configured ReportHub Ubuntu LTS 14.0.4 Virtual Machine via the vagrant ssh command Steps Within the ngm-reportShell folder, ssh into machine $ vagrant ssh Within the server, navigate to the ngm-reportEngine repository $ cd /home/ubuntu/nginx/www/ngm-reportEngine Start the Sails RestAPI application $ sudo sails lift Navigate to http://192.168.33.16 and ReportHub is running!","title":"Getting Started"},{"location":"start/#reporthub","text":"Reporting Workflow. Decision Support. Real-Time. Developer documentation for local project setup","title":"ReportHub"},{"location":"start/#requirements","text":"Vagrant v1.9.xx or newer version VirtualBox v5.1.xx or newer version","title":"Requirements"},{"location":"start/#getting-started","text":"The first steps will be to establish a local development environment on your machine. Steps Install Software Requirements listed above on your local machine Make a folder with name Reporthub $ mkdir Reporthub $ cd ReportHub Make a folder name ngm $ mkdir ngm Go to here Download all the folder And put it to folder Reporthub/ngm , except the following folders: ngm-reportEngine ngm-reportHub ngm-reportPrint ngm-reportShell Fork the repo below to your github : https://github.com/iMMAP/ngm-reportHub . https://github.com/iMMAP/ngm-reportEngine .","title":"Getting Started"},{"location":"start/#contributing-code","text":"Please review the following links in order to understand how to contribute code to ReportHub repositories","title":"Contributing Code"},{"location":"start/#github-fork-pull-approach","text":"Fork & Pull Approach Github Flow","title":"GitHub Fork &amp; Pull Approach"},{"location":"start/#vagrant-local-server","text":"Run the following commands to setup the local development environment. Steps on the cmd line, navigate to ReportHub/ngm folder in your local machine $ cd ReportHub/ngm in ReportHub/ngm folder fetch ngm-reportShell repo $ git clone https://github.com/iMMAP/ngm-reportShell.git cd into ngm-reportShell $ cd ngm-reportShell Open ngm-reporthub.shell.build.sh Uncomment and update the gitHub repository locations to your forked version of the code # UPDATE TO YOUR FORKED REPO! sudo git clone https://github.com/<your.fork>/ngm-reportHub.git # UPDATE TO YOUR FORKED REPO! sudo git clone https://github.com/<your.fork>/ngm-reportEngine.git Run Vagrant Up command $ vagrant up NOTE: This will take some time to fetch the Ubuntu Lts 14.04 VirtualBox image as well as install server software to establish a replica local server environemnt During install, review VirtualBox configurations in ngm-reportShell/Vagrantfile ngm-reportShell/ngm-reporthub.shell.build.sh","title":"Vagrant Local Server"},{"location":"start/#running-reporthub","text":"Once the VirtualBox is completed installation, you can access the configured ReportHub Ubuntu LTS 14.0.4 Virtual Machine via the vagrant ssh command Steps Within the ngm-reportShell folder, ssh into machine $ vagrant ssh Within the server, navigate to the ngm-reportEngine repository $ cd /home/ubuntu/nginx/www/ngm-reportEngine Start the Sails RestAPI application $ sudo sails lift Navigate to http://192.168.33.16 and ReportHub is running!","title":"Running ReportHub"},{"location":"widgets/","text":"What is widget ? Widget are some simple component with specific function. List of Widget 1. ngm-calHeatmap Widget used to create calender heatmap How to use Put snippet code below in your model widgets: [{ type: 'calHeatmap', card: 'card-panel', config: { * optional*} }] Example : $scope.model = { name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'calHeatmap', card: 'card-panel', style: 'padding-top:5px;', config: { *optional* } }] }] }] } 2. ngm-dropzone Widget used to upload file Put snippet code below in your model widgets: [{ type: 'dropzone', style: 'padding: 0px;', card: 'white grey-text text-darken-2', config: { parallelUploads: 1, cardTitle: 'Title', header: 'collection-header blue', dictMsg: '<div style=\"font-weight:400;font-size:1.2rem;\">Round ' + $scope.report.report_round + ', Distribution ' + $scope.report.report_distribution + '<br/>Drag & Drop Planned Beneficiaries</div>', minimize: { open: !data.length, toggle: true, disabled: !data.length }, url: ngmAuth.LOCATION + '/api/upload-file', acceptedFiles: '.xlsx', headers: { 'Authorization': 'Bearer ' + **token** }, successMessage: false, process: { redirect: 'redirect link', requests: **API** } } }] Example $scope.model = { name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'dropzone', style: 'padding: 0px;', card: 'white grey-text text-darken-2', config: { parallelUploads: 1, cardTitle: $scope.report.organization_tag.toUpperCase() + ' Planned Beneficiaries', header: 'collection-header blue', dictMsg: '<div style=\"font-weight:400;font-size:1.2rem;\">Round ' + $scope.report.report_round + ', Distribution ' + $scope.report.report_distribution + '<br/>Drag & Drop Planned Beneficiaries</div>', minimize: { open: !data.length, toggle: true, disabled: !data.length }, url: ngmAuth.LOCATION + '/api/upload-file', acceptedFiles: '.xlsx', headers: { 'Authorization': 'Bearer ' + ngmUser.get().token }, successMessage: false, process: { redirect: 'bgd/cxb/gfa/gfd/round/' + $scope.report.report_round + '/distribution/' + $scope.report.report_distribution + '/' + $scope.report.reporting_period + '/plan/' + $scope.report.organization_tag + '/all/all/all/all', requests: [{ method: 'POST', url: ngmAuth.LOCATION + '/api/wfp/gfa/gfd/processPlannedBeneficiaries', data: { admin0pcode: $scope.report.user.admin0pcode, organization_tag: $scope.report.organization_tag, report_round: $scope.report.report_round, report_distribution: $scope.report.report_distribution, } }] } } }] }] }] } 3. ngm-highchart Widget used to create charts How to use Put snippet code below in your model widgets: [{ type: 'highchart', style: 'height: 300px;', card: 'card-panel chart-stats-card white grey-text text-darken-2', config: { } }] Example : $scope.model = { name:\"*****\", header:{}, menu:[], rows:[ { columns: [ { styleClass: 's12 m6 l6', widgets: [{ type: 'highchart', style: 'height: 300px;', card: 'card-panel chart-stats-card white grey-text text-darken-2', config: { title: { //text: $filter('translate')('children'), text: $filter('translate')('executor_organizations_mayus')+\" TOP 5 (# - %)\" }, display: { label: true, fractionSize: 1, subLabelfractionSize: 0, postfix: '%' }, templateUrl: '/scripts/widgets/ngm-highchart/template/projectplandashboardcolumns.html', style: '\"text-align:center; width: 100%; height: 100%; position: absolute; top: 0px; left: 0;\"', chartConfig: { options: { chart: { type: 'column', height: 250, //margin: [0,0,0,0], //spacing: [0,0,0,0] }, tooltip: { enabled: true, headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>', //pointFormat: '<span style=\"color:{point.color}\">{point.name} (# - %): </span> <b>{point.y} - '+ $filter('translate')('{point.label:.1f}')+'%</b> '+$filter('translate')('of_total')+'<br/>' pointFormat: '<span style=\"color:{point.color}\">{point.name} (# - %): </span> <b>${point.yformat} - {point.label:.1f}%</b> '+$filter('translate')('of_total')+'<br/>' }, xAxis: { type: 'category', title: { text: $filter('translate')('executor_organizations') } }, yAxis: { title: { text: $filter('translate')('total_by_organization_and_percent_of_total') } } }, title: { text: '', margin: 0 }, series: [{ //name: $filter('translate')('children'), name: $filter('translate')('organization'), //name: \"EDAD (# - %)\", size: '100%', innerSize: '100%', showInLegend:false, dataLabels: { enabled: true, // format: '{point.y} - {point.label:.1f}%' format: '${point.yformat}<br>{point.label:.1f}%' //inside: true }, //request: $scope.dashboard.getRequest({ indicator: 'BarChartAges', chart_for:'ages'}) , request: $scope.dashboard.getRequest({ indicator: 'BarChartFinancingExecutorOrg', chart_for:'financingExecutorOrg'}), }] } } }] } ] } ] } 4. ngm-html widget used to call component made using html. You can make your custom component and call using this widget. How to use Put snippet code below in your model widgets: [{ type: 'html', card: 'card-panel', style: 'padding:0px; height: 90px; padding-top:10px;', config: { *optional* } }] Example: $scope.model ={ name:\"*****\", header:{}, menu:[], rows:[{ columns:[{ styleClass: 's12 m12 l12', widgets: [{ type: 'html', card: 'card-panel', style: 'padding:0px; height: 90px; padding-top:10px;', config: { *optional* } }] }] }] } 5. ngm-leaflet Widget used to show a map How to use Put snippet code below in your model widgets: [{ type: 'leaflet', card: 'card-panel', style: 'padding:0px;', config: { height: '490px', display: { type: 'marker', zoomToBounds: true, // zoomCorrection: -3 }, defaults: { zoomToBounds: true }, layers: { baselayers: { osm: { name: 'Mapbox', type: 'xyz', url: '**mapboxtoken**', layerOptions: { continuousWorld: true } } }, overlays: { **** } }, request: **API request** } }] Example: $scope.model ={ name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'leaflet', card: 'card-panel', style: 'padding:0px;', config: { height: '490px', display: { type: 'marker', zoomToBounds: true, // zoomCorrection: -3 }, defaults: { zoomToBounds: true }, layers: { baselayers: { osm: { name: 'Mapbox', type: 'xyz', url: '', layerOptions: { continuousWorld: true } } }, overlays: { health: { name: 'Health', type: 'markercluster', visible: true, layerOptions: { maxClusterRadius: 90 } } } }, request: $scope.dashboard.getHealthRequest( 'markers' ) } }] }] } }] 6. ngm-list Widget to show list of data. In this widget you can make your own style for list How to use Put snippet code below in your model widgets: [{ type: 'list', card: 'white grey-text text-darken-2', config: { titleIcon: '**foricon**', color: 'blue lighten-1', textColor: 'white-text', title: '**title**', icon: 'edit', request: **API request** } }] Example: $scope.model ={ name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'list', card: 'white grey-text text-darken-2', config: { titleIcon: 'alarm_on', // color: 'teal lighten-4', color: 'blue lighten-1', textColor: 'white-text', title: $route.current.params.admin0pcode === 'af' ? $filter('translate')('active_activty_plans'):$filter('translate')('active_projects'), icon: 'edit', request: $scope.report.getProjectRequest( 'active' ) } }] }] }] } 7. ngm-modal Widget to set a modal How to use Put snippet code below in your model widgets: [{ type: 'modal', config: { id: '**forid**', materialize: { dismissible: false } } Example : $scope.model = { name:\"*****\", header:{}, menu:[], rows: [{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'modal', config: { id: 'ngm-dews-modal', materialize: { dismissible: false } } }] }] } ] } 8. ngm-stats Widget to show some static number How to use Put snippet code below in your model widgets: [{ type: 'stats', style: 'text-align:center; height:235px; padding-top:90px;', card: 'card-panel stats-card white grey-text text-darken-2', config: { title:*title*, request: *API to get data* } }] Example $scope.model = { name:\"*****\", header:{}, menu:[], rows: [{ columns: [ { styleClass: 's12 m6 l3', widgets: [{ type: 'stats', style: 'text-align: center;', card: 'card-panel stats-card white grey-text text-darken-2', config: { title: $filter('translate')('sectors_mayus'), request: $scope.dashboard.getRequest( 'sectors', 'active' ) } }] }] }] } 9. ngm-table Widget to show table How to use Put snippet code below in your model widgets: [{ type: 'table', card: 'panel', style: 'padding:0px; height: ' + $scope.dashboard.ngm.style.height + 'px;', config: { showTitle:'', style: '', headerClass: 'collection-header red lighten-2', headerText: 'white-text', headerIcon: 'assignment_late', headerTitle: '', templateUrl: 'path html file', tableOptions:{ count: 10 }, request: **API** } }] Example $scope.model= { name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12 remove', widgets: [{ type: 'table', card: 'panel', style: 'padding:0px; height: ' + $scope.dashboard.ngm.style.height + 'px;', config: { user: $scope.dashboard.user, cluster_id: $scope.dashboard.cluster_id, showTitle: $scope.dashboard.report_type === 'activity' ? true : false, style: $scope.dashboard.ngm.style, headerClass: 'collection-header teal lighten-2', headerText: 'white-text', headerIcon: 'assignment_turned_in', headerTitle: $filter('translate')('reports_completed'), templateUrl: '/scripts/widgets/ngm-table/templates/cluster/admin.project.list.html', tableOptions:{ count: 10 }, request: { method: 'POST', url: ngmAuth.LOCATION + '/api/cluster/admin/indicator', data: $scope.dashboard.getRequest( 'reports_submitted', true ) } } }] }] }] } Make Custom Widget In ReportHub you can make a custom widget to provide a component with the function that you want. 1. Create the Widget config Here the template code angular.module( '**put name of your widget**', [ 'ngm.provider' ]) .config( function( dashboardProvider ){ dashboardProvider .widget('**put name of your widget**', { title: '**put title of your widget**', description: '**put description of your widget**', controller: '**put name of your controller**', templateUrl: '**put path of html file for this widget**' }); note : please keep the 'ngm.provider' when make a widget Example: angular.module( 'ngm.widget.project.financials', [ 'ngm.provider' ]) .config( function( dashboardProvider ){ dashboardProvider .widget('project.financials', { title: 'Cluster Financial Form', description: 'Cluster Financial Form', controller: 'ClusterProjectFormFinancialCtrl', templateUrl: '/scripts/modules/cluster/views/forms/financials/form.html' }); }) 2. Create the Controller Here the template code .controller( 'ClusterProjectFormFinancialCtrl', [ ]function (){} ]); note: for the detail information how to make angularjs controller, this is the reference ( controller in angularjs ) Example : .controller('ClusterProjectFormFinancialCtrl', ['$scope', function($scope) { $scope.greeting = 'Hola!'; }]); 3. Example of the Widget Code angular.module( 'ngm.widget.project.financials', [ 'ngm.provider' ]) .config( function( dashboardProvider ){ dashboardProvider .widget('project.financials', { title: 'Cluster Financial Form', description: 'Cluster Financial Form', controller: 'ClusterProjectFormFinancialCtrl', templateUrl: '/scripts/modules/cluster/views/forms/financials/form.html' }); }) .controller( 'ClusterProjectFormFinancialCtrl', [ '$scope', '$location', '$timeout', '$filter', '$q', '$http', '$route', 'ngmUser', 'ngmAuth', 'ngmData', 'ngmClusterHelper', 'ngmClusterLists', 'ngmClusterFinancial', 'ngmClusterImportFile', 'config', '$translate', function ($scope, $location, $timeout, $filter, $q, $http, $route, ngmUser, ngmAuth, ngmData, ngmClusterHelper, ngmClusterLists, ngmClusterFinancial, ngmClusterImportFile, config,$translate ){ *********** }]) 4. Put the widget in the main module So to use custom widget in this app we have to inject it to main module The main module of Reporthub is ngmReportHub . It will look like the snippet code below. angular .module('ngmReportHub', [ 'ngm.widget.organization.stock', ]) 5. Don't forget to put file path of your widget Don't forget to put path file path of your widget in index.html","title":"Widgets"},{"location":"widgets/#what-is-widget","text":"Widget are some simple component with specific function.","title":"What is widget ?"},{"location":"widgets/#list-of-widget","text":"","title":"List of Widget"},{"location":"widgets/#1-ngm-calheatmap","text":"Widget used to create calender heatmap How to use Put snippet code below in your model widgets: [{ type: 'calHeatmap', card: 'card-panel', config: { * optional*} }] Example : $scope.model = { name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'calHeatmap', card: 'card-panel', style: 'padding-top:5px;', config: { *optional* } }] }] }] }","title":"1. ngm-calHeatmap"},{"location":"widgets/#2-ngm-dropzone","text":"Widget used to upload file Put snippet code below in your model widgets: [{ type: 'dropzone', style: 'padding: 0px;', card: 'white grey-text text-darken-2', config: { parallelUploads: 1, cardTitle: 'Title', header: 'collection-header blue', dictMsg: '<div style=\"font-weight:400;font-size:1.2rem;\">Round ' + $scope.report.report_round + ', Distribution ' + $scope.report.report_distribution + '<br/>Drag & Drop Planned Beneficiaries</div>', minimize: { open: !data.length, toggle: true, disabled: !data.length }, url: ngmAuth.LOCATION + '/api/upload-file', acceptedFiles: '.xlsx', headers: { 'Authorization': 'Bearer ' + **token** }, successMessage: false, process: { redirect: 'redirect link', requests: **API** } } }] Example $scope.model = { name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'dropzone', style: 'padding: 0px;', card: 'white grey-text text-darken-2', config: { parallelUploads: 1, cardTitle: $scope.report.organization_tag.toUpperCase() + ' Planned Beneficiaries', header: 'collection-header blue', dictMsg: '<div style=\"font-weight:400;font-size:1.2rem;\">Round ' + $scope.report.report_round + ', Distribution ' + $scope.report.report_distribution + '<br/>Drag & Drop Planned Beneficiaries</div>', minimize: { open: !data.length, toggle: true, disabled: !data.length }, url: ngmAuth.LOCATION + '/api/upload-file', acceptedFiles: '.xlsx', headers: { 'Authorization': 'Bearer ' + ngmUser.get().token }, successMessage: false, process: { redirect: 'bgd/cxb/gfa/gfd/round/' + $scope.report.report_round + '/distribution/' + $scope.report.report_distribution + '/' + $scope.report.reporting_period + '/plan/' + $scope.report.organization_tag + '/all/all/all/all', requests: [{ method: 'POST', url: ngmAuth.LOCATION + '/api/wfp/gfa/gfd/processPlannedBeneficiaries', data: { admin0pcode: $scope.report.user.admin0pcode, organization_tag: $scope.report.organization_tag, report_round: $scope.report.report_round, report_distribution: $scope.report.report_distribution, } }] } } }] }] }] }","title":"2. ngm-dropzone"},{"location":"widgets/#3-ngm-highchart","text":"Widget used to create charts How to use Put snippet code below in your model widgets: [{ type: 'highchart', style: 'height: 300px;', card: 'card-panel chart-stats-card white grey-text text-darken-2', config: { } }] Example : $scope.model = { name:\"*****\", header:{}, menu:[], rows:[ { columns: [ { styleClass: 's12 m6 l6', widgets: [{ type: 'highchart', style: 'height: 300px;', card: 'card-panel chart-stats-card white grey-text text-darken-2', config: { title: { //text: $filter('translate')('children'), text: $filter('translate')('executor_organizations_mayus')+\" TOP 5 (# - %)\" }, display: { label: true, fractionSize: 1, subLabelfractionSize: 0, postfix: '%' }, templateUrl: '/scripts/widgets/ngm-highchart/template/projectplandashboardcolumns.html', style: '\"text-align:center; width: 100%; height: 100%; position: absolute; top: 0px; left: 0;\"', chartConfig: { options: { chart: { type: 'column', height: 250, //margin: [0,0,0,0], //spacing: [0,0,0,0] }, tooltip: { enabled: true, headerFormat: '<span style=\"font-size:11px\">{series.name}</span><br>', //pointFormat: '<span style=\"color:{point.color}\">{point.name} (# - %): </span> <b>{point.y} - '+ $filter('translate')('{point.label:.1f}')+'%</b> '+$filter('translate')('of_total')+'<br/>' pointFormat: '<span style=\"color:{point.color}\">{point.name} (# - %): </span> <b>${point.yformat} - {point.label:.1f}%</b> '+$filter('translate')('of_total')+'<br/>' }, xAxis: { type: 'category', title: { text: $filter('translate')('executor_organizations') } }, yAxis: { title: { text: $filter('translate')('total_by_organization_and_percent_of_total') } } }, title: { text: '', margin: 0 }, series: [{ //name: $filter('translate')('children'), name: $filter('translate')('organization'), //name: \"EDAD (# - %)\", size: '100%', innerSize: '100%', showInLegend:false, dataLabels: { enabled: true, // format: '{point.y} - {point.label:.1f}%' format: '${point.yformat}<br>{point.label:.1f}%' //inside: true }, //request: $scope.dashboard.getRequest({ indicator: 'BarChartAges', chart_for:'ages'}) , request: $scope.dashboard.getRequest({ indicator: 'BarChartFinancingExecutorOrg', chart_for:'financingExecutorOrg'}), }] } } }] } ] } ] }","title":"3. ngm-highchart"},{"location":"widgets/#4-ngm-html","text":"widget used to call component made using html. You can make your custom component and call using this widget. How to use Put snippet code below in your model widgets: [{ type: 'html', card: 'card-panel', style: 'padding:0px; height: 90px; padding-top:10px;', config: { *optional* } }] Example: $scope.model ={ name:\"*****\", header:{}, menu:[], rows:[{ columns:[{ styleClass: 's12 m12 l12', widgets: [{ type: 'html', card: 'card-panel', style: 'padding:0px; height: 90px; padding-top:10px;', config: { *optional* } }] }] }] }","title":"4. ngm-html"},{"location":"widgets/#5-ngm-leaflet","text":"Widget used to show a map How to use Put snippet code below in your model widgets: [{ type: 'leaflet', card: 'card-panel', style: 'padding:0px;', config: { height: '490px', display: { type: 'marker', zoomToBounds: true, // zoomCorrection: -3 }, defaults: { zoomToBounds: true }, layers: { baselayers: { osm: { name: 'Mapbox', type: 'xyz', url: '**mapboxtoken**', layerOptions: { continuousWorld: true } } }, overlays: { **** } }, request: **API request** } }] Example: $scope.model ={ name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'leaflet', card: 'card-panel', style: 'padding:0px;', config: { height: '490px', display: { type: 'marker', zoomToBounds: true, // zoomCorrection: -3 }, defaults: { zoomToBounds: true }, layers: { baselayers: { osm: { name: 'Mapbox', type: 'xyz', url: '', layerOptions: { continuousWorld: true } } }, overlays: { health: { name: 'Health', type: 'markercluster', visible: true, layerOptions: { maxClusterRadius: 90 } } } }, request: $scope.dashboard.getHealthRequest( 'markers' ) } }] }] } }]","title":"5. ngm-leaflet"},{"location":"widgets/#6-ngm-list","text":"Widget to show list of data. In this widget you can make your own style for list How to use Put snippet code below in your model widgets: [{ type: 'list', card: 'white grey-text text-darken-2', config: { titleIcon: '**foricon**', color: 'blue lighten-1', textColor: 'white-text', title: '**title**', icon: 'edit', request: **API request** } }] Example: $scope.model ={ name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'list', card: 'white grey-text text-darken-2', config: { titleIcon: 'alarm_on', // color: 'teal lighten-4', color: 'blue lighten-1', textColor: 'white-text', title: $route.current.params.admin0pcode === 'af' ? $filter('translate')('active_activty_plans'):$filter('translate')('active_projects'), icon: 'edit', request: $scope.report.getProjectRequest( 'active' ) } }] }] }] }","title":"6. ngm-list"},{"location":"widgets/#7-ngm-modal","text":"Widget to set a modal How to use Put snippet code below in your model widgets: [{ type: 'modal', config: { id: '**forid**', materialize: { dismissible: false } } Example : $scope.model = { name:\"*****\", header:{}, menu:[], rows: [{ columns: [{ styleClass: 's12 m12 l12', widgets: [{ type: 'modal', config: { id: 'ngm-dews-modal', materialize: { dismissible: false } } }] }] } ] }","title":"7. ngm-modal"},{"location":"widgets/#8-ngm-stats","text":"Widget to show some static number How to use Put snippet code below in your model widgets: [{ type: 'stats', style: 'text-align:center; height:235px; padding-top:90px;', card: 'card-panel stats-card white grey-text text-darken-2', config: { title:*title*, request: *API to get data* } }] Example $scope.model = { name:\"*****\", header:{}, menu:[], rows: [{ columns: [ { styleClass: 's12 m6 l3', widgets: [{ type: 'stats', style: 'text-align: center;', card: 'card-panel stats-card white grey-text text-darken-2', config: { title: $filter('translate')('sectors_mayus'), request: $scope.dashboard.getRequest( 'sectors', 'active' ) } }] }] }] }","title":"8. ngm-stats"},{"location":"widgets/#9-ngm-table","text":"Widget to show table How to use Put snippet code below in your model widgets: [{ type: 'table', card: 'panel', style: 'padding:0px; height: ' + $scope.dashboard.ngm.style.height + 'px;', config: { showTitle:'', style: '', headerClass: 'collection-header red lighten-2', headerText: 'white-text', headerIcon: 'assignment_late', headerTitle: '', templateUrl: 'path html file', tableOptions:{ count: 10 }, request: **API** } }] Example $scope.model= { name:\"*****\", header:{}, menu:[], rows:[{ columns: [{ styleClass: 's12 m12 l12 remove', widgets: [{ type: 'table', card: 'panel', style: 'padding:0px; height: ' + $scope.dashboard.ngm.style.height + 'px;', config: { user: $scope.dashboard.user, cluster_id: $scope.dashboard.cluster_id, showTitle: $scope.dashboard.report_type === 'activity' ? true : false, style: $scope.dashboard.ngm.style, headerClass: 'collection-header teal lighten-2', headerText: 'white-text', headerIcon: 'assignment_turned_in', headerTitle: $filter('translate')('reports_completed'), templateUrl: '/scripts/widgets/ngm-table/templates/cluster/admin.project.list.html', tableOptions:{ count: 10 }, request: { method: 'POST', url: ngmAuth.LOCATION + '/api/cluster/admin/indicator', data: $scope.dashboard.getRequest( 'reports_submitted', true ) } } }] }] }] }","title":"9. ngm-table"},{"location":"widgets/#make-custom-widget","text":"In ReportHub you can make a custom widget to provide a component with the function that you want.","title":"Make Custom Widget"},{"location":"widgets/#1-create-the-widget-config","text":"Here the template code angular.module( '**put name of your widget**', [ 'ngm.provider' ]) .config( function( dashboardProvider ){ dashboardProvider .widget('**put name of your widget**', { title: '**put title of your widget**', description: '**put description of your widget**', controller: '**put name of your controller**', templateUrl: '**put path of html file for this widget**' }); note : please keep the 'ngm.provider' when make a widget Example: angular.module( 'ngm.widget.project.financials', [ 'ngm.provider' ]) .config( function( dashboardProvider ){ dashboardProvider .widget('project.financials', { title: 'Cluster Financial Form', description: 'Cluster Financial Form', controller: 'ClusterProjectFormFinancialCtrl', templateUrl: '/scripts/modules/cluster/views/forms/financials/form.html' }); })","title":"1. Create the Widget config"},{"location":"widgets/#2-create-the-controller","text":"Here the template code .controller( 'ClusterProjectFormFinancialCtrl', [ ]function (){} ]); note: for the detail information how to make angularjs controller, this is the reference ( controller in angularjs ) Example : .controller('ClusterProjectFormFinancialCtrl', ['$scope', function($scope) { $scope.greeting = 'Hola!'; }]);","title":"2. Create the Controller"},{"location":"widgets/#3-example-of-the-widget-code","text":"angular.module( 'ngm.widget.project.financials', [ 'ngm.provider' ]) .config( function( dashboardProvider ){ dashboardProvider .widget('project.financials', { title: 'Cluster Financial Form', description: 'Cluster Financial Form', controller: 'ClusterProjectFormFinancialCtrl', templateUrl: '/scripts/modules/cluster/views/forms/financials/form.html' }); }) .controller( 'ClusterProjectFormFinancialCtrl', [ '$scope', '$location', '$timeout', '$filter', '$q', '$http', '$route', 'ngmUser', 'ngmAuth', 'ngmData', 'ngmClusterHelper', 'ngmClusterLists', 'ngmClusterFinancial', 'ngmClusterImportFile', 'config', '$translate', function ($scope, $location, $timeout, $filter, $q, $http, $route, ngmUser, ngmAuth, ngmData, ngmClusterHelper, ngmClusterLists, ngmClusterFinancial, ngmClusterImportFile, config,$translate ){ *********** }])","title":"3. Example of the Widget Code"},{"location":"widgets/#4-put-the-widget-in-the-main-module","text":"So to use custom widget in this app we have to inject it to main module The main module of Reporthub is ngmReportHub . It will look like the snippet code below. angular .module('ngmReportHub', [ 'ngm.widget.organization.stock', ])","title":"4. Put the widget in the main module"},{"location":"widgets/#5-dont-forget-to-put-file-path-of-your-widget","text":"Don't forget to put path file path of your widget in index.html","title":"5. Don't forget to put file path of your widget"}]}